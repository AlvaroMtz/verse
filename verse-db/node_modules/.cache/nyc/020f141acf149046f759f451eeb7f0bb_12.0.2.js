'use strict';var cov_5ey4lxawa=function(){var path="/Users/alvaromartinez/Test/nodejs/verse/verse-db/index.js",hash="9f94ee4dfced5b99daffe00f7ec6ae6ad3368d36",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/alvaromartinez/Test/nodejs/verse/verse-db/index.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:41}},"1":{start:{line:4,column:24},end:{line:4,column:49}},"2":{start:{line:5,column:25},end:{line:5,column:51}},"3":{start:{line:6,column:17},end:{line:6,column:36}},"4":{start:{line:9,column:0},end:{line:42,column:1}},"5":{start:{line:10,column:4},end:{line:20,column:6}},"6":{start:{line:22,column:20},end:{line:22,column:41}},"7":{start:{line:23,column:21},end:{line:23,column:44}},"8":{start:{line:24,column:22},end:{line:24,column:46}},"9":{start:{line:26,column:2},end:{line:26,column:33}},"10":{start:{line:27,column:2},end:{line:27,column:35}},"11":{start:{line:29,column:2},end:{line:29,column:32}},"12":{start:{line:31,column:2},end:{line:33,column:3}},"13":{start:{line:32,column:4},end:{line:32,column:40}},"14":{start:{line:35,column:16},end:{line:35,column:18}},"15":{start:{line:36,column:17},end:{line:36,column:19}},"16":{start:{line:38,column:2},end:{line:41,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:17},end:{line:9,column:18}},loc:{start:{line:9,column:41},end:{line:42,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:31,column:2},end:{line:33,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:33,column:3}},{start:{line:31,column:2},end:{line:33,column:3}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const setupDatabase=(cov_5ey4lxawa.s[0]++,require('./lib/db'));const setupAgentModel=(cov_5ey4lxawa.s[1]++,require('./models/agent'));const setupMetricModel=(cov_5ey4lxawa.s[2]++,require('./models/metric'));const defaults=(cov_5ey4lxawa.s[3]++,require('defaults'));cov_5ey4lxawa.s[4]++;module.exports=async function(config){cov_5ey4lxawa.f[0]++;cov_5ey4lxawa.s[5]++;config=defaults(config,{dialect:'sqlite',pool:{max:10,min:0,idle:10000},query:{raw:true}});const sequelize=(cov_5ey4lxawa.s[6]++,setupDatabase(config));const AgentModel=(cov_5ey4lxawa.s[7]++,setupAgentModel(config));const MetricModel=(cov_5ey4lxawa.s[8]++,setupMetricModel(config));cov_5ey4lxawa.s[9]++;AgentModel.hasMany(MetricModel);cov_5ey4lxawa.s[10]++;MetricModel.belongsTo(AgentModel);cov_5ey4lxawa.s[11]++;await sequelize.authenticate();cov_5ey4lxawa.s[12]++;if(config.setup){cov_5ey4lxawa.b[0][0]++;cov_5ey4lxawa.s[13]++;await sequelize.sync({force:true});}else{cov_5ey4lxawa.b[0][1]++;}const Agent=(cov_5ey4lxawa.s[14]++,{});const Metric=(cov_5ey4lxawa.s[15]++,{});cov_5ey4lxawa.s[16]++;return{Agent,Metric};};