{"version":3,"sources":["agent-tests.js"],"names":["test","require","config","logging","MetricStub","belongsTo","sinon","spy","db","AgentStub","sandbox","beforeEach","create","hasMany","setupDatabase","proxyquire","afterEach","restore","t","truthy","Agent","serial","true","called"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;;AAEA,IAAIC,SAAS;AACTC,aAAS,YAAW,CAAE;AADb,CAAb;;AAIA,IAAIC,aAAa;AACbC,eAAWC,MAAMC,GAAN;AADE,CAAjB;;AAIA,IAAIC,KAAK,IAAT;AACA,IAAIC,YAAY,IAAhB;AACA,IAAIC,UAAU,IAAd;;AAEAV,KAAKW,UAAL,CAAgB,YAAU;AACtBD,cAAUJ,MAAMI,OAAN,CAAcE,MAAd,EAAV;;AAEAH,gBAAY;AACRI,iBAASH,QAAQH,GAAR;AADD,KAAZ;;AAIA,UAAMO,gBAAgBC,WAAW,KAAX,EAAkB;AACpC,0BAAkB,MAAMN,SADY;AAEpC,2BAAmB,MAAML;AAFW,KAAlB,CAAtB;AAIAI,SAAK,MAAMM,cAAcZ,MAAd,CAAX;AACH,CAZD;;AAcAF,KAAKgB,SAAL,CAAe,MAAK;AAChBN,eAAWJ,MAAMI,OAAN,CAAcO,OAAd,EAAX;AACH,CAFD;;AAIAjB,KAAK,OAAL,EAAckB,KAAI;AAAA;;AACdA,MAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmB,cAAnB;AACH,CAFD;;AAIApB,KAAKqB,MAAL,CAAY,OAAZ,EAAoBH,KAAG;AAAA;AAAA;;AACnBA,MAAEI,IAAF,yBAAO,gEAAUT,OAAV,wBAAkBU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAgC,iCAAhC;AACAL,MAAEI,IAAF,yBAAO,iEAAWjB,SAAX,wBAAqBkB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoC,oCAApC;AACH,CAHD","file":"agent-tests.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\n\nlet config = {\n    logging: function() {}\n}\n\nlet MetricStub = {\n    belongsTo: sinon.spy()\n}\n\nlet db = null\nlet AgentStub = null\nlet sandbox = null\n\ntest.beforeEach(async ()=>{\n    sandbox = sinon.sandbox.create()\n\n    AgentStub = {\n        hasMany: sandbox.spy()\n    }\n\n    const setupDatabase = proxyquire('../', {\n        './models/agent': () => AgentStub,\n        './models/metric': () => MetricStub\n    })\n    db = await setupDatabase(config)\n})\n\ntest.afterEach(() =>{\n    sandbox && sinon.sandbox.restore()\n})\n\ntest('Agent', t =>{\n    t.truthy(db.Agent, 'Agent existe')\n})\n\ntest.serial('Setup',t=>{\n    t.true(AgentStub.hasMany.called,'AgentModel.hasMany was executed')\n    t.true(MetricStub.belongsTo.called, 'MetricModel.belongsTo was executed')\n} )\n\n"]}